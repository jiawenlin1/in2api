{"name": "在运行版保存配方值", "status": "broken", "statusDetails": {"message": "Exception: 分析YAML文件异常：异常信息: Traceback (most recent call last):\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 313, in send_request\n    self.last_headers = self.replace_load(headers)\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 140, in replace_load\n    new_value = getattr(DubugTalk(), func_name)(*args_value.split(','))\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\debug_talk.py\", line 26, in get_extract_data\n    return read_extract_file(node_name)\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\yaml_util.py\", line 19, in read_extract_file\n    return value[one_node]\nTypeError: 'NoneType' object is not subscriptable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 185, in analysis_yaml\n    res = self.send_request(name =name,method=method,\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 336, in send_request\n    error_log(\"发送请求异常：异常信息: %s\" % str(traceback.format_exc()))\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\logger_util.py\", line 66, in error_log\n    raise Exception(log_message)\nException: 发送请求异常：异常信息: Traceback (most recent call last):\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 313, in send_request\n    self.last_headers = self.replace_load(headers)\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 140, in replace_load\n    new_value = getattr(DubugTalk(), func_name)(*args_value.split(','))\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\debug_talk.py\", line 26, in get_extract_data\n    return read_extract_file(node_name)\n  File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\yaml_util.py\", line 19, in read_extract_file\n    return value[one_node]\nTypeError: 'NoneType' object is not subscriptable", "trace": "self = <common.requests_util.RequestUtil object at 0x00000169178CA820>\nname = '在运行版保存配方值', method = 'post'\nurl = '/api/v1/runtimeformula/ingredient/save'\nheaders = {'Authorization': 'Bearer ${get_extract_data(Authorization)}', 'X-Project': '${get_extract_data(x_project)}'}\nfile = None\nkwargs = {'files': None, 'json': {'formulaIngredientInfos': [{'formulaIngredientId': '${get_extract_data(formulaIngredientId_0)... 'minValue': '0', ...}], 'formulaSetId': '${get_extract_data(formulary_id)}', 'id': '${get_extract_data(formula_id)}'}}\n\n    def send_request(self, name, method, url, headers=None,file=None,**kwargs):\n        print(\"==url==:\",url)\n        try:\n            # 处理method\n            self.last_method = str(method).lower()\n            # 处理基础路径\n            self.base_url = self.replace_load(self.base_url) + self.replace_load(url)\n            # 处理请求头\n            if headers and isinstance(headers, dict):\n>               self.last_headers = self.replace_load(headers)\n\ncommon\\requests_util.py:313: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:140: in replace_load\n    new_value = getattr(DubugTalk(), func_name)(*args_value.split(','))\ndebug_talk.py:26: in get_extract_data\n    return read_extract_file(node_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\none_node = 'x_project'\n\n    def read_extract_file(one_node):\n        with open(get_object_path()+\"\\\\extract.yml\",encoding='utf-8') as f:\n            value = yaml.load(stream=f, Loader=yaml.FullLoader)\n>           return value[one_node]\nE           TypeError: 'NoneType' object is not subscriptable\n\ncommon\\yaml_util.py:19: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <common.requests_util.RequestUtil object at 0x00000169178CA820>\ncaseinfo = {'base_url': '${get_base_url(cms_url)}', 'name': '在运行版保存配方值', 'request': {'json': {'formulaIngredientInfos': [{'formul...xtract_data(formulary_id)}', 'id': '${get_extract_data(formula_id)}'}}, 'validate': [{'equals': {'status_code': 200}}]}\n\n    def analysis_yaml(self, caseinfo: object) -> object:\n        # print(\"==========caseinfo:\",caseinfo)\n        try:\n            # 1.必须有的四个一级关键字：name,base_url,request,validate\n            caseinfo_keys = dict(caseinfo).keys()\n            if 'name' in caseinfo_keys and 'base_url' in caseinfo_keys and 'request' in caseinfo_keys and 'validate' in caseinfo_keys:\n                # 2.在request一级关键字下必须包括两个二级关键字：method，url\n                request_keys = dict(caseinfo['request']).keys()\n                if 'method' in request_keys and 'url' in request_keys:\n                    # 参数(param,data,json)，请求头，文件上传这些都不能约束\n                    self.base_url = caseinfo['base_url']\n                    name = caseinfo['name']\n                    method = caseinfo['request'].pop('method')\n                    # url = caseinfo['request']['url']\n                    url = caseinfo['request'].pop('url')\n                    headers = None\n                    if jsonpath.jsonpath(caseinfo, '$..headers'):\n                        headers = caseinfo['request']['headers']\n                        del caseinfo['request']['headers']\n    \n                    files = None\n                    if jsonpath.jsonpath(caseinfo, '$..files'):\n                        files = caseinfo['request']['files']\n                        for key,value in dict(files).items():\n                            files_value = self.replace_load(value)\n                            files[key] = open(files_value,'rb')\n                        del caseinfo['request']['files']\n>                   res = self.send_request(name =name,method=method,\n                                            url=url,\n                                            headers=headers, files=files,\n                                            **caseinfo['request'])\n\ncommon\\requests_util.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:336: in send_request\n    error_log(\"发送请求异常：异常信息: %s\" % str(traceback.format_exc()))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlog_message = '发送请求异常：异常信息: Traceback (most recent call last):\\n  File \"D:\\\\CMS2.0_API\\\\EOS_API_AUTOMATION_TEST\\\\common\\\\requests_ut....py\", line 19, in read_extract_file\\n    return value[one_node]\\nTypeError: \\'NoneType\\' object is not subscriptable\\n'\n\n    def error_log(log_message):\n        LoggerUtil().creat_log().info(log_message)\n>       raise Exception(log_message)\nE       Exception: 发送请求异常：异常信息: Traceback (most recent call last):\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 313, in send_request\nE           self.last_headers = self.replace_load(headers)\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 140, in replace_load\nE           new_value = getattr(DubugTalk(), func_name)(*args_value.split(','))\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\debug_talk.py\", line 26, in get_extract_data\nE           return read_extract_file(node_name)\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\yaml_util.py\", line 19, in read_extract_file\nE           return value[one_node]\nE       TypeError: 'NoneType' object is not subscriptable\n\ncommon\\logger_util.py:66: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_formula.TestCreat object at 0x000001691678F5E0>\ncaseinfo = {'base_url': '${get_base_url(cms_url)}', 'name': '在运行版保存配方值', 'request': {'json': {'formulaIngredientInfos': [{'formul...xtract_data(formulary_id)}', 'id': '${get_extract_data(formula_id)}'}}, 'validate': [{'equals': {'status_code': 200}}]}\n\n    @allure.story(\"接口名称：在运行版保存配方值\")\n    @pytest.mark.parametrize('caseinfo', read_testcase_file('/testcase/10_Formula/save_formula_parameter_cms.yml'))\n    def test_save_formula_parameter_cms(self, caseinfo):\n        allure.dynamic.title(caseinfo['name'])\n        allure.dynamic.description(caseinfo['name'])\n>       RequestUtil().analysis_yaml(caseinfo)\n\ntestcase\\10_Formula\\test_formula.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:273: in analysis_yaml\n    error_log(\"分析YAML文件异常：异常信息: %s\" % str(traceback.format_exc()))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlog_message = '分析YAML文件异常：异常信息: Traceback (most recent call last):\\n  File \"D:\\\\CMS2.0_API\\\\EOS_API_AUTOMATION_TEST\\\\common\\\\request...y\", line 19, in read_extract_file\\n    return value[one_node]\\nTypeError: \\'NoneType\\' object is not subscriptable\\n\\n'\n\n    def error_log(log_message):\n        LoggerUtil().creat_log().info(log_message)\n>       raise Exception(log_message)\nE       Exception: 分析YAML文件异常：异常信息: Traceback (most recent call last):\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 313, in send_request\nE           self.last_headers = self.replace_load(headers)\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 140, in replace_load\nE           new_value = getattr(DubugTalk(), func_name)(*args_value.split(','))\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\debug_talk.py\", line 26, in get_extract_data\nE           return read_extract_file(node_name)\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\yaml_util.py\", line 19, in read_extract_file\nE           return value[one_node]\nE       TypeError: 'NoneType' object is not subscriptable\nE       \nE       During handling of the above exception, another exception occurred:\nE       \nE       Traceback (most recent call last):\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 185, in analysis_yaml\nE           res = self.send_request(name =name,method=method,\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 336, in send_request\nE           error_log(\"发送请求异常：异常信息: %s\" % str(traceback.format_exc()))\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\logger_util.py\", line 66, in error_log\nE           raise Exception(log_message)\nE       Exception: 发送请求异常：异常信息: Traceback (most recent call last):\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 313, in send_request\nE           self.last_headers = self.replace_load(headers)\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\requests_util.py\", line 140, in replace_load\nE           new_value = getattr(DubugTalk(), func_name)(*args_value.split(','))\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\debug_talk.py\", line 26, in get_extract_data\nE           return read_extract_file(node_name)\nE         File \"D:\\CMS2.0_API\\EOS_API_AUTOMATION_TEST\\common\\yaml_util.py\", line 19, in read_extract_file\nE           return value[one_node]\nE       TypeError: 'NoneType' object is not subscriptable\n\ncommon\\logger_util.py:66: Exception"}, "description": "在运行版保存配方值", "attachments": [{"name": "log", "source": "5cde8dd8-2f7c-4765-9b45-3a496a69e896-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'name': '在运行版保存配方值', 'base_url': '${get_base_url(cms_url)}', 'request': {'url': '/api/v1/runtimeformula/ingredient/save', 'method': 'post', 'json': {'id': '${get_extract_data(formula_id)}', 'formulaSetId': '${get_extract_data(formulary_id)}', 'formulaIngredientInfos': [{'formulaIngredientId': '${get_extract_data(formulaIngredientId_0)}', 'name': '整数', 'variableName': 'A2', 'value': '10', 'maxValue': '100', 'minValue': '0', 'remark': '', 'id': 'row_72'}, {'formulaIngredientId': '${get_extract_data(formulaIngredientId_1)}', 'name': '浮点数', 'variableName': 'A10', 'value': '20.456', 'maxValue': '100', 'minValue': '0', 'remark': '', 'id': 'row_73'}, {'formulaIngredientId': '${get_extract_data(formulaIngredientId_2)}', 'name': '二进制', 'variableName': 'A1', 'value': '1', 'maxValue': '100', 'minValue': '0', 'remark': '', 'id': 'row_74'}, {'formulaIngredientId': '${get_extract_data(formulaIngredientId_3)}', 'name': '字符串', 'variableName': 'A12', 'value': '文本1', 'maxValue': '100', 'minValue': '0', 'remark': '', 'id': 'row_75'}]}, 'headers': {'X-Project': '${get_extract_data(x_project)}', 'Authorization': 'Bearer ${get_extract_data(Authorization)}'}}, 'validate': [{'equals': {'status_code': 200}}]}"}], "start": 1721792532485, "stop": 1721792532489, "uuid": "9e4a0531-a098-47ba-96ac-ca225ac7c8f3", "historyId": "d5018121f0fd1478b17132b78fa9988b", "testCaseId": "14a3a952369affb2c6a8c3da72263c30", "fullName": "testcase.10_Formula.test_formula.TestCreat#test_save_formula_parameter_cms", "labels": [{"name": "story", "value": "接口名称：在运行版保存配方值"}, {"name": "feature", "value": "配方管理"}, {"name": "epic", "value": "CMS2.0"}, {"name": "parentSuite", "value": "testcase.10_Formula"}, {"name": "suite", "value": "test_formula"}, {"name": "subSuite", "value": "TestCreat"}, {"name": "host", "value": "DESKTOP-V6TD7H4"}, {"name": "thread", "value": "15060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.10_Formula.test_formula"}]}